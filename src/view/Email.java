/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import controller.KetNoi;
import controller.NhanVienDAO;
import java.sql.PreparedStatement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import model.NhanVien;
import model.TaiKhoan;

/**
 *
 * @author MinhNguyenCong
 */
public class Email extends javax.swing.JFrame {
    private String email = null;
    private int manv = -1;
    private String otp = null;
    
    /** Creates new form Email */
    public Email() {
        initComponents();
        setLocationRelativeTo(null);
        
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnGuiMatKhau = new javax.swing.JButton();

        jLabel1.setText("Email :");

        btnGuiMatKhau.setText("Gửi Mật Khẩu");
        btnGuiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuiMatKhauActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnGuiMatKhau)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuiMatKhau))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuiMatKhauActionPerformed
        // TODO add your handling code here:
        try {
            if (txtEmail.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Email không được để trống!");
                return;
            }
            List<NhanVien> list = new ArrayList<>();
            list = NhanVienDAO.getNhanVien();
            for (NhanVien nhanVien : list) {
                if (nhanVien.getEmail().equalsIgnoreCase(txtEmail.getText())) {
                    manv = nhanVien.getMaNhanVien();
                    email = nhanVien.getEmail();
                    break;
                }
            }
            if (email == null) {
                JOptionPane.showMessageDialog(this, "Email chưa được đăng ký");
                return;
            }
            sendEmail();
            updateMK();
            this.dispose();
            JOptionPane.showMessageDialog(this, "Thay đổi mật khẩu thành công, vui long check mail để nhận mật khẩu mới");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnGuiMatKhauActionPerformed

    private void updateMK(){
        try {
            String query = "update taikhoan set matkhau = ? where manhanvien = ?";
            PreparedStatement ps = KetNoi.moKetNoi().prepareStatement(query);
            ps.setString(1, otp);
            ps.setInt(2, manv);
            ps.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private void sendEmail() {
        try {
            //random 1 số 6 chữ số
            otp = new DecimalFormat("000000").format(new Random().nextInt(999999));
            //địa chỉ email nhận
//            String email = "congminh.funny@gmail.com";
            //mail chủ
            final String username = "minhncph13186@fpt.edu.vn";
            final String password = "365ngayyeuem";
            //cài đặt thông số của gmail
            Properties prop = new Properties();
            prop.put("mail.smtp.host", "smtp.gmail.com");
            prop.put("mail.smtp.port", "587");
            prop.put("mail.smtp.auth", "true");
            prop.put("mail.smtp.starttls.enable", "true"); //TLS
            
            //tạo ra phiên làm việc -> đăng nhập tk gmail
            Session session = Session.getInstance(prop,
                    new javax.mail.Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(username, password);
                }
            });

            try {
                //tạo đối tượng gửi mail
                Message message = new MimeMessage(session);
                //set mail gửi
                message.setFrom(new InternetAddress("minhncph13186@fpt.edu.vn"));
                //set mail nhận
                message.setRecipients(
                        Message.RecipientType.TO,
                        InternetAddress.parse(email)
                );
                //nội dung mail
                message.setSubject("Reset password!");
                message.setText("Dear my friend,"
                        + "\n\n Please create a new password that you don't use on any other site!"
                        + "\n\n Reset code: " + otp
                        + "\n\n Email sent by Java.");
                
                //tiến hành gửi mail
                Transport.send(message);

//                NewPassword newPassword = new NewPassword(txtUsername.getText(), otp);
//                newPassword.setVisible(true);
//                jDesktopPane.add(newPassword);
//                FormDAO.centerJIF(jDesktopPane, newPassword);
//                try {
//                    newPassword.setSelected(true);
//                } catch (Exception e) {
//                    e.printStackTrace();
//                }
//                this.dispose();
            } catch (MessagingException e) {
                e.printStackTrace();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Email.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Email().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuiMatKhau;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables

}
